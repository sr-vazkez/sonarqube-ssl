version: "3"
services:
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - sonarnet
    ports:
      - "9000:9000" # web-ui (http)
      # - "443:9000"  # web-ui (https)
  init:
      image: bash
      privileged: true
      user: root
      networks:
        - sonarnet
      volumes:
        - ./init.sh:/mnt/init.sh 
      command: ["sh", "-e", "/mnt/init.sh"]
  db:
    image: postgres
    restart: always
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    networks:
      - sonarnet
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  reverse_proxy:
      container_name: reverse_proxy
      depends_on:
        - sonarqube
      image: nginx
      networks:
        - sonarnet
      ports:
        - 80:80
        - 443:443
      restart: always
      volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        - ./ssl/localhost.crt:/etc/ssl/localhost.crt                                                                                                                                                             .crt
        - ./ssl/localhost.key:/etc/ssl/localhost.key

networks:
  sonarnet:
    driver: bridge

volumes:
  sonarqube_data: {}
  sonarqube_extensions: {}
  sonarqube_logs: {}
  postgresql: {}
  postgresql_data: {}